// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Paillave.Etl.Samples.DataAccess;

#nullable disable

namespace Paillave.Etl.Samples.Migrations
{
    [DbContext(typeof(TestDbContext))]
    [Migration("20241127170031_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Paillave.Etl.Samples.DataAccess.Composition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("DATE");

                    b.Property<int>("PortfolioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasAlternateKey("Date", "PortfolioId");

                    b.HasIndex("PortfolioId");

                    b.ToTable("Composition", (string)null);
                });

            modelBuilder.Entity("Paillave.Etl.Samples.DataAccess.Portfolio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("InternalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SicavId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasAlternateKey("InternalCode");

                    b.HasIndex("SicavId");

                    b.ToTable("Portfolio", (string)null);
                });

            modelBuilder.Entity("Paillave.Etl.Samples.DataAccess.Position", b =>
                {
                    b.Property<int>("CompositionId")
                        .HasColumnType("int");

                    b.Property<int>("SecurityId")
                        .HasColumnType("int");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("CompositionId", "SecurityId");

                    b.HasIndex("SecurityId");

                    b.ToTable("Position", (string)null);
                });

            modelBuilder.Entity("Paillave.Etl.Samples.DataAccess.Security", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InternalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Isin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasAlternateKey("InternalCode");

                    b.ToTable("Security", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("Security");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Paillave.Etl.Samples.DataAccess.Sicav", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("InternalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasAlternateKey("InternalCode");

                    b.ToTable("Sicav", (string)null);
                });

            modelBuilder.Entity("Paillave.Etl.Samples.DataAccess.SimpleTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SimpleTable", (string)null);
                });

            modelBuilder.Entity("Paillave.Etl.Samples.DataAccess.Equity", b =>
                {
                    b.HasBaseType("Paillave.Etl.Samples.DataAccess.Security");

                    b.Property<string>("Issuer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Equity");
                });

            modelBuilder.Entity("Paillave.Etl.Samples.DataAccess.ShareClass", b =>
                {
                    b.HasBaseType("Paillave.Etl.Samples.DataAccess.Security");

                    b.Property<string>("Class")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("ShareClass");
                });

            modelBuilder.Entity("Paillave.Etl.Samples.DataAccess.Composition", b =>
                {
                    b.HasOne("Paillave.Etl.Samples.DataAccess.Portfolio", "Portfolio")
                        .WithMany()
                        .HasForeignKey("PortfolioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Portfolio");
                });

            modelBuilder.Entity("Paillave.Etl.Samples.DataAccess.Portfolio", b =>
                {
                    b.HasOne("Paillave.Etl.Samples.DataAccess.Sicav", "Sicav")
                        .WithMany()
                        .HasForeignKey("SicavId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sicav");
                });

            modelBuilder.Entity("Paillave.Etl.Samples.DataAccess.Position", b =>
                {
                    b.HasOne("Paillave.Etl.Samples.DataAccess.Composition", "Composition")
                        .WithMany("Positions")
                        .HasForeignKey("CompositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Paillave.Etl.Samples.DataAccess.Security", "Security")
                        .WithMany()
                        .HasForeignKey("SecurityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Composition");

                    b.Navigation("Security");
                });

            modelBuilder.Entity("Paillave.Etl.Samples.DataAccess.Composition", b =>
                {
                    b.Navigation("Positions");
                });
#pragma warning restore 612, 618
        }
    }
}
